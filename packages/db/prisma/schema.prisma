generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ContentType {
  document
  tweet
  youtube
  link
  note
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  username      String?   @unique
  password      String?
  links         Link[]
  contents      Content[]
  accounts      Account[] // Added relation field for Account
  name          String?
  image         String?
  emailVerified DateTime?
  Tag           Tag[]
}

model Tag {
  id          String       @id @default(uuid())
  title       String       @unique
  contentTags ContentTag[]
  color       String       @default("amber")
  userId      String
  user        User         @relation(fields: [userId], references: [id])
  @@unique([title, userId])
}

model Link {
  id     String @id @default(uuid())
  hash   String @unique
  userId String
  user   User   @relation(fields: [userId], references: [id])
}

model Content {
  id          String       @id @default(uuid())
  title       String
  link        String?       @unique
  type        ContentType
  createdAt   DateTime     @default(now())
  userId      String
  user        User         @relation(fields: [userId], references: [id])
  contentTags ContentTag[]
}

model ContentTag {
  contentId String
  tagId     String

  content Content @relation(fields: [contentId], references: [id])
  tag     Tag     @relation(fields: [tagId], references: [id])

  @@id([contentId, tagId]) // Composite primary key
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // optional
  access_token      String? // optional
  expires_at        Int? // optional
  token_type        String? // optional
  scope             String? // optional
  id_token          String? // optional
  session_state     String? // optional

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}
